#!/bin/bash

# M122 Backup Script
# -------------------
# Gruppe: Studer
# - Lian Studer
# - Kris Huber
# -------------------
# Datum: 29. Nov 2021
# -------------------

# Pfad des aktuellen Skripts (backup.sh)
SCRIPT_PATH=${0%/*}

SOURCE_PATH="$SCRIPT_PATH/../topSrc"
BACKUP_PATH="$SCRIPT_PATH/../topDst"

# Hilfe-Text, der angezeigt wird, falls ungültige Argumente eingegeben werden
function usage() {
    echo "backup [-h] -s <source> -d <dest>"
}

# Unix-Getopt Argument Parser
# Befehle:
# -h | --help    : Zeigt Hilfe Text an
# -s | --source  : Source Ordner 
# -d | --dest    : Backup Ordner
VALID_ARGS=$(getopt -o "hs:d:p" --long "help,source:,dest:,pretend" -- "$@")

# Überprüft, ob die Ausführung von 'getopt' bei der Definition von VALID_ARGS erfolgreich war.
if [[ $? -ne 0 ]]; then
    exit 1
fi

eval set -- $VALID_ARGS
while [ : ]; do
    case "$1"  in
        -h | --help)
            echo $USAGE_TEXT
            shift
            ;;
        -s | --source)
            SOURCE_PATH=$2
            shift 2
            ;;
        -d | --dest)
            BACKUP_PATH=$2
            shift 2
            ;;
        --) shift;
            break
            ;;
        *) echo "Error: Invalid argument: $1."; usage ;;
    esac
done

# Create the backup folder
if [[ ! -d "$BACKUP_PATH" ]]; then
    mkdir $BACKUP_PATH    
fi

# Create log file
logfile=$(date '+%Y%m%d_%H%M%S_Log_Backup.txt')
touch $BACKUP_PATH/$logfile

function write_log() {
    time=$1
    source=$2
    destination=$3

    printf "Timestamp: $1\t\tSource: $2\t\tDestination: $3\t\tType: $4\n" >> "$logfile"
}

# Iterative backup function
function backup() {
    src_path=$1
    dst_path=$2

    if [[ ! -d "$dst_path" ]]; then
        mkdir "$dst_path"
    fi
    
    find $src_path -type d \
        -exec mkdir -p "$dst_path"/{} \; \
        -exec printf "$(date '+%d.%m.%Y %H:%M:%S')\t\tCopying Folder\t\t"{}"\t\t\t\tOk\n" >> $BACKUP_PATH/$logfile \;

    find $src_path -type f \
        -exec cp {} "$dst_path"/{} \; \
        -exec printf "$(date '+%d.%m.%Y %H:%M:%S')\t\tCopying File\t\t"{}"\t\t\t\tOk\n"   >> $BACKUP_PATH/$logfile \;
}

# Running the Backup
backup $SOURCE_PATH $BACKUP_PATH
